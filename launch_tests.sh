#!/bin/bash
# Script de lancement du menu avanc√© des tests depuis le r√©pertoire racine

# Variables par d√©faut
HEADLESS_MODE=false
ENVIRONMENT=""
KEEP_TEST_DATA=false

# Fonction d'aide
show_help() {
    echo "üé≤ JDR 4 MJ - Menu Avanc√© des Tests"
    echo "===================================="
    echo ""
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  -h, --headless    Activer le mode headless pour les tests Selenium"
    echo "  -e, --env ENV     Sp√©cifier l'environnement d'ex√©cution (local, staging, production)"
    echo "  -k, --keep        Conserver les donn√©es de test apr√®s ex√©cution (par d√©faut: suppression)"
    echo "  --help           Afficher cette aide"
    echo ""
    echo "Exemples:"
    echo "  $0                # Lancement normal avec interface graphique"
    echo "  $0 -h             # Lancement en mode headless (sans interface)"
    echo "  $0 -e local       # Lancement avec environnement local"
    echo "  $0 -e staging -h  # Lancement en mode headless avec environnement staging"
    echo "  $0 --env production # Lancement avec environnement production"
    echo "  $0 -k             # Conserver les donn√©es de test apr√®s ex√©cution"
    echo ""
}

# Analyser les arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--headless)
            HEADLESS_MODE=true
            shift
            ;;
        -e|--env)
            if [[ -n "$2" && "$2" != -* ]]; then
                ENVIRONMENT="$2"
                shift 2
            else
                echo "‚ùå L'option -e/--env n√©cessite un argument (local, staging, production)"
                exit 1
            fi
            ;;
        -k|--keep)
            KEEP_TEST_DATA=true
            shift
            ;;
        --help)
            show_help
            exit 0
            ;;
        *)
            echo "‚ùå Option inconnue: $1"
            echo "Utilisez --help pour voir les options disponibles"
            exit 1
            ;;
    esac
done

echo "üé≤ JDR 4 MJ - Menu Avanc√© des Tests"
echo "===================================="
if [ "$HEADLESS_MODE" = true ]; then
    echo "üîß Mode headless activ√©"
fi
if [ -n "$ENVIRONMENT" ]; then
    echo "üåç Environnement: $ENVIRONMENT"
fi
if [ "$KEEP_TEST_DATA" = true ]; then
    echo "üíæ Conservation des donn√©es de test activ√©e"
fi
echo ""

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -d "tests" ]; then
    echo "‚ùå R√©pertoire 'tests' non trouv√©"
    echo "   Assurez-vous d'√™tre dans le r√©pertoire racine du projet JDR MJ"
    exit 1
fi

# V√©rifier que Python est install√©
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 n'est pas install√©"
    echo "   Installez Python 3 pour utiliser le menu des tests"
    exit 1
fi

# Exporter les variables d'environnement
if [ "$HEADLESS_MODE" = true ]; then
    export HEADLESS=true
    echo "üåê Variable d'environnement HEADLESS=true d√©finie"
fi

if [ -n "$ENVIRONMENT" ]; then
    export TEST_ENVIRONMENT="$ENVIRONMENT"
    echo "üåç Variable d'environnement TEST_ENVIRONMENT=$ENVIRONMENT d√©finie"
fi

if [ "$KEEP_TEST_DATA" = true ]; then
    export KEEP_TEST_DATA="true"
    echo "üíæ Variable d'environnement KEEP_TEST_DATA=true d√©finie"
fi

# Changer vers le r√©pertoire des tests et lancer le menu avanc√©
cd tests

# V√©rifier si le menu avanc√© existe
if [ -f "advanced_test_menu.py" ]; then
    echo "üöÄ Lancement du menu avanc√© des tests..."
    echo ""
    python3 advanced_test_menu.py
else
    echo "‚ö†Ô∏è  Menu avanc√© non trouv√©, utilisation du menu classique..."
    echo ""
    ./launch_menu.sh
fi
