#!/bin/bash

# Script de nettoyage des utilisateurs de test
# Usage: ./cleanup_tests.sh [options]

echo "üßπ Script de nettoyage des utilisateurs de test - JDR MJ"
echo "=================================================="

# Fonction d'aide
show_help() {
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  --dry-run          Afficher les utilisateurs qui seraient supprim√©s sans les supprimer"
    echo "  --all              Supprimer tous les utilisateurs de test (peu importe l'√¢ge)"
    echo "  --days=N           Supprimer les utilisateurs cr√©√©s il y a plus de N jours (d√©faut: 1)"
    echo "  --python           Utiliser le script Python au lieu du script PHP"
    echo "  --help, -h         Afficher cette aide"
    echo ""
    echo "Exemples:"
    echo "  $0 --dry-run                    # Voir ce qui serait supprim√©"
    echo "  $0 --days=7                     # Supprimer les utilisateurs > 7 jours"
    echo "  $0 --all                        # Supprimer tous les utilisateurs de test"
    echo "  $0 --python --dry-run           # Utiliser le script Python en mode dry-run"
}

# Variables par d√©faut
DRY_RUN=""
ALL=""
DAYS=""
USE_PYTHON=""

# Analyser les arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --dry-run)
            DRY_RUN="--dry-run"
            shift
            ;;
        --all)
            ALL="--all"
            shift
            ;;
        --days=*)
            DAYS="--days=${1#*=}"
            shift
            ;;
        --python)
            USE_PYTHON="true"
            shift
            ;;
        --help|-h)
            show_help
            exit 0
            ;;
        *)
            echo "‚ùå Option inconnue: $1"
            show_help
            exit 1
            ;;
    esac
done

# V√©rifier que nous sommes dans le bon r√©pertoire
if [[ ! -f "config/database.test.php" ]]; then
    echo "‚ùå Erreur: Ce script doit √™tre ex√©cut√© depuis la racine du projet"
    echo "   (le r√©pertoire contenant config/database.test.php)"
    exit 1
fi

# Choisir le script √† utiliser
if [[ "$USE_PYTHON" == "true" ]]; then
    echo "üêç Utilisation du script Python..."
    
    # V√©rifier que Python est disponible
    if ! command -v python3 &> /dev/null; then
        echo "‚ùå Python3 n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier que le script Python existe
    if [[ ! -f "tests/cleanup_test_users.py" ]]; then
        echo "‚ùå Le script Python tests/cleanup_test_users.py n'existe pas"
        exit 1
    fi
    
    # Installer pymysql si n√©cessaire
    echo "üì¶ V√©rification des d√©pendances Python..."
    python3 -c "import pymysql" 2>/dev/null || {
        echo "üì¶ Installation de pymysql..."
        pip3 install pymysql
    }
    
    # Ex√©cuter le script Python
    cd tests
    python3 cleanup_test_users.py
    cd ..
    
else
    echo "üêò Utilisation du script PHP..."
    
    # V√©rifier que PHP est disponible
    if ! command -v php &> /dev/null; then
        echo "‚ùå PHP n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier que le script PHP existe
    if [[ ! -f "cleanup_test_data.php" ]]; then
        echo "‚ùå Le script PHP cleanup_test_data.php n'existe pas"
        exit 1
    fi
    
    # Ex√©cuter le script PHP
    php cleanup_test_data.php $DRY_RUN $ALL $DAYS
fi

echo ""
echo "‚úÖ Script termin√©"
